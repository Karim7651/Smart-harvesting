name: Deploy to Google App Engine (GAE)

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22'

      - name: Install dependencies
        run: npm ci

      - name: Google Cloud Auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Generate config.env file from secrets
        run: |
          echo "NODE_ENV=${{ secrets.NODE_ENV }}" >> config.env
          echo "PORT=${{ secrets.PORT }}" >> config.env

          echo "DATABASE=${{ secrets.DATABASE }}" >> config.env
          echo "DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }}" >> config.env
          echo "DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}" >> config.env

          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> config.env
          echo "JWT_EXPIRES_IN=${{ secrets.JWT_EXPIRES_IN }}" >> config.env
          echo "JWT_COOKIE_EXPIRES_IN=${{ secrets.JWT_COOKIE_EXPIRES_IN }}" >> config.env

          echo "EMAIL_USERNAME=${{ secrets.EMAIL_USERNAME }}" >> config.env
          echo "EMAIL_APP_PASSWORD=${{ secrets.EMAIL_APP_PASSWORD }}" >> config.env

          echo "FRONT=${{ secrets.FRONT }}" >> config.env

          echo "AWS_BUCKET_NAME=${{ secrets.AWS_BUCKET_NAME }}" >> config.env
          echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" >> config.env
          echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> config.env
          echo "AWS_REGION=${{ secrets.AWS_REGION }}" >> config.env

      - name: Deploy to Google App Engine
        run: gcloud app deploy app.yaml --quiet
